version: "3.8"

services:
  django:
    container_name: backend
    image: cr.selcloud.ru/basic/aviatx_backend:{{repos.backend_branch}}
    command: sh -c "cd backend && python manage.py collectstatic --noinput && python manage.py migrate && gunicorn backend.wsgi:application -c backend/gunicorn_wsgi.conf.py"
    restart: always
    volumes:
      - static_volume:/home/app/web/backend/static
      - media_volume:/home/app/web/backend/media
    expose:
      - 8000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - {{envs_dir}}/.env.django.prod

  django-asgi:
    container_name: backend
    image: cr.selcloud.ru/basic/aviatx_backend:{{repos.backend_branch}}
    command: sh -c "cd backend && python manage.py collectstatic --noinput && gunicorn backend.asgi:application -c backend/gunicorn_asgi.conf.py"
    restart: always
    volumes:
      - static_volume:/home/app/web/backend/static
      - media_volume:/home/app/web/backend/media
    expose:
      - 8001
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - {{envs_dir}}/.env.django.asgi.prod
    depends_on:
      - django

  redis:
    container_name: redis
    image: redis:alpine
    restart: always

  celery:
    container_name: celery
    image: cr.selcloud.ru/basic/aviatx_backend:{{repos.backend_branch}}
    command: sh -c "cd backend && celery -A backend worker --loglevel=debug --concurrency=4 -l info"
    restart: always
    volumes:
        - .:/usr/src/app
        - static_volume:/home/app/web/backend/static
        - media_volume:/home/app/web/backend/media
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
        - {{envs_dir}}/.env.django.prod
    depends_on:
        - django
        - django-asgi
        - redis

  celery-beat:
    container_name: celery-beat
    image: cr.selcloud.ru/basic/aviatx_backend:{{repos.backend_branch}}
    command: sh -c "cd backend && celery -A backend beat -l info"
    restart: always
    volumes:
        - .:/usr/src/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
        - {{envs_dir}}/.env.django.prod
    depends_on:
        - django
        - django-asgi
        - redis

  nuxtjs:
    container_name: frontend
    image: cr.selcloud.ru/basic/aviatx_frontend:{{repos.frontend_branch}}
    command: npm start
    restart: always
    expose:
      - 3000
    env_file:
      - {{envs_dir}}/.env.nuxtjs.prod
    depends_on:
      - django
      - django-asgi

  nginx-proxy:
    container_name: nginx-proxy
    build: {{bootstrap_dir}}/nginx
    restart: always
    volumes:
      - static_volume:/home/app/web/backend/static
      - media_volume:/home/app/web/backend/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 443:443
      - 80:80
    depends_on:
      - nuxtjs

  nginx-proxy-letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion:2.2
    restart: always
    env_file:
      - {{envs_dir}}/.env.proxy.prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  zabbix-agent:
    container_name: zabbix-agent
    image: zabbix/zabbix-agent2:ubuntu-7.0-latest
    restart: always
    pid: host
    env_file:
      - {{envs_dir}}/.env.zabbix.prod
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host
    privileged: true
    group_add:
      - {{_docker_gid}}

volumes:
  static_volume:
  media_volume:
    external: true
  certs:
  html:
  vhost:
  acme:
